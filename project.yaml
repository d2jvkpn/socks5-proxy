app_name: socks5-proxy
app_version: 1.0.1
authors: ["d2jvkpn <d2jvkpn@noreply.local>"]
repository: git@github.com:d2jvkpn/socks5-proxy.git
image_name: socks5-proxy

ssh_proxy: |
  ##### location: configs/local.yaml

  ssh:
    ssh_address: remote_host:22
    ssh_user: account
    ssh_password: password
    ssh_private_key: /home/account/.ssh/id_rsa
    ssh_known_hosts: /home/account/.ssh/known_hosts
    socks5_user: hello
    socks5_password: world

  noauth:
    ssh_address: remote_host:22
    ssh_user: account
    ssh_password: password
    ssh_private_key: /home/account/.ssh/id_rsa
    ssh_known_hosts: /home/account/.ssh/known_hosts

socks5_proxy: |
    ##### location: configs/ssh.conf

    Host remote_host
        # ProxyJump another_host
        HostName 127.0.0.1
        User account
        Port 22
        # IdentityFile ~/.ssh/id_rsa
        IdentityFile configs/ssh.key
        # UserKnownHostsFile ~/.ssh/known_hosts
        UserKnownHostsFile configs/known_hosts
        LogLevel    INFO
        Compression yes
        ServerAliveInterval 5
        ServerAliveCountMax 3
        ExitOnForwardFailure yes

proxy_pac: |
  // location: proxy.pac

  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Proxy_servers_and_tunneling/Proxy_Auto-Configuration_PAC_file

  function shuffleArray(array) {
    const shuffledArray = array.slice();

    // Fisher-Yates
    for (let i = shuffledArray.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));

      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];
    }

    return shuffledArray;
  }

  function isInDomainList(host, domainList) {
    for (var i = 0; i < domainList.length; i++) {
      if (dnsDomainIs(host, domainList[i])) {
        return true;
      }
    }
    return false;
  }

  function FindProxyForURL(url, host) {
    if (isPlainHostName(host) || shExpMatch(host, "*.local")) {
      return "DIRECT";
    }

    if (shExpMatch(host, "*.a.example.com")) {
      return "PROXY a.proxy.domain:8080";
    } else if (shExpMatch(host, "*.b.example.com")) {
      return "PROXY b1.proxy.domain:8080; PROXY b2.proxy.domain:8080";
    } else if (shExpMatch(host, "*.c.example.com")) {
      return "SOCKS5 127.0.0.1:1080; SOCKS5H 127.0.0.1:1081; DIRECT";
    }

    var proxies = [
      "SOCKS5 127.0.0.1:1080",
      "SOCKS5 127.0.0.1:1081",
    ];

    return shuffleArray(proxies).join("; ");
  }
